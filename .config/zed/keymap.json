// Zed keymap
//
// For information on binding keys, see the Zed
// documentation: https://zed.dev/docs/key-bindings
//
// To see the default key bindings run `zed: open default keymap`
// from the command palette.
[
    // -- Disabled
    {
        "bindings": {
            "cmd-.": null,
            "cmd-,": null,
            "cmd-o": null,
            "cmd-;": null
        }
    },
    {
        "context": "Pane",
        "bindings": {
            "ctrl-3": null,
            "ctrl-4": null,
            "ctrl-5": null,
            "ctrl-6": null,
            "ctrl-7": null,
            "ctrl-8": null,
            "ctrl-9": null
        }
    },
    {
        "context": "Workspace",
        "bindings": {
            "cmd-1": null,
            "cmd-2": null,
            "cmd-3": null,
            "cmd-4": null,
            "cmd-5": null,
            "cmd-6": null,
            "cmd-7": null,
            "cmd-8": null,
            "cmd-9": null,
            "cmd-j": null,
            "cmd-t": null,
            "cmd-r": null
        }
    },
    {
        "context": "Editor",
        "bindings": {
            "cmd-'": null,
            "cmd-/": null,
            "ctrl-n": null
        }
    },
    {
        "context": "ProjectPanel",
        "bindings": {
            "tab": null,
            "backspace": null,
            "delete": null,
            "cmd-backspace": null,
            "cmd-delete": null,
            "cmd-alt-backspace": null
        }
    },
    {
        "context": "vim_mode == normal",
        "bindings": {
            "ctrl-f": null,
            "ctrl-a": null
        }
    },

    // -- Global
    {
        "bindings": {
            "ctrl-,": "workspace::ToggleLeftDock",
            "ctrl-.": "workspace::ToggleRightDock",
            "cmd-`": "workspace::ToggleBottomDock"
        }
    },

    // -- Workspace
    {
        "context": "Workspace",
        "bindings": {
            "cmd-1": ["pane::ActivateItem", 0],
            "cmd-2": ["pane::ActivateItem", 1],
            "cmd-3": ["pane::ActivateItem", 2],
            "cmd-4": ["pane::ActivateItem", 3],
            "cmd-5": ["pane::ActivateItem", 4],
            "cmd-6": ["pane::ActivateItem", 5],
            "cmd-7": ["pane::ActivateItem", 6],
            "cmd-8": ["pane::ActivateItem", 7],
            "cmd-9": ["pane::ActivateItem", 8],
            "ctrl a": "editor::ToggleCodeActions",
            "cmd-j": "outline::Toggle",
            "cmd-shift-alt-g": "git::Diff",
            "cmd-shift-alt-f": "git_panel::ToggleFocus"
        }
    },

    // -- Pane
    {
        "context": "Pane",
        "bindings": {
            "ctrl-1": "project_panel::ToggleFocus",
            "ctrl-2": "git_panel::ToggleFocus"
        }
    },
    {
        "context": "Pane && EmptyPane",
        "bindings": {
            "Space": "project_symbols::Toggle",
            "ctrl-Space": "file_finder::Toggle"
        }
    },

    // -- Editor
    {
        "context": "Editor",
        "bindings": {
            "cmd-i": "editor::Hover",
            "cmd-8": ["editor::SelectNext", { "replace_newest": false }],
            "cmd-d": "editor::ToggleSelectedDiffHunks",
            "cmd-/": "assistant::InlineAssist",
            "cmd-r": "editor::FindAllReferences",
            "ctrl-f": "pane::DeploySearch"
        }
    },
    {
        "context": "Editor && edit_prediction",
        "bindings": {
            "shift-tab": "editor::AcceptEditPrediction"
        }
    },
    {
        "context": "Editor && edit_prediction_conflict",
        "use_key_equivalents": true,
        "bindings": {
            "shift-tab": "editor::AcceptEditPrediction"
        }
    },

    // -- ProjectPanel
    {
        "context": "ProjectPanel",
        "bindings": {
            "tab": "project_panel::ToggleFocus",
            "ctrl-2": "git_panel::ToggleFocus",
            "cmd-delete": ["project_panel::Delete", { "skip_prompt": false }],
            "cmd-backspace": ["project_panel::Trash", { "skip_prompt": false }]
        }
    },
    {
        "context": "ProjectPanel && not_editing",
        "bindings": {
            "h": "menu::SelectPrevious",
            "l": "menu::SelectNext",
            "Space": "project_symbols::Toggle",
            "shift-h": "menu::SelectFirst",
            "shift-l": "menu::SelectLast"
        }
    },

    // -- GitPanel
    {
        "context": "GitPanel",
        "bindings": {
            "h": "menu::SelectPrevious",
            "l": "menu::SelectNext",
            "tab": "git_panel::ToggleFocus",
            "Space": "project_symbols::Toggle",
            "shift-h": "menu::SelectFirst",
            "shift-l": "menu::SelectLast",
            "ctrl-1": "project_panel::ToggleFocus"
        }
    },

    // -- Terminal
    {
        "context": "Terminal",
        "bindings": {
            "cmd-t": "workspace::NewTerminal"
        }
    },

    // -- Vim Normal
    {
        "context": "vim_mode == normal",
        "bindings": {
            "0": "vim::FirstNonWhitespace",
            "r": "pane::ActivateNextItem",
            "h": "vim::Up",
            "l": "vim::Down",
            "j": "vim::Left",
            "k": "vim::Right",
            "cmd-u": "vim::PreviousLesserIndent",
            "tab": ["workspace::SendKeystrokes", "ctrl-, ctrl-,"],
            ", a": "editor::ToggleCodeActions",
            ", g": "git_panel::ToggleFocus",
            "z A": "editor::UnfoldAll",
            "Space": "project_symbols::Toggle",
            "ctrl-Space": "file_finder::Toggle",
            "Backspace": "pane::CloseActiveItem",
            "g G": [
                "workspace::SendKeystrokes",
                "cmd-shift-alt-f cmd-shift-alt-g"
            ]
        }
    },

    // -- Vim Visual
    {
        "context": "vim_mode == visual",
        "bindings": {
            "h": "vim::Up",
            "l": "vim::Down",
            "j": "vim::Left",
            "k": "vim::Right"
        }
    },

    // -- Helix Normal
    {
        "context": "vim_mode == helix_normal",
        "bindings": {
            "h": "vim::Up",
            "l": "vim::Down",
            "j": "vim::Left",
            "k": "vim::Right"
        }
    },

    // -- Helix Visual
    {
        "context": "vim_mode == helix_visual",
        "bindings": {
            "h": "vim::Up",
            "l": "vim::Down",
            "j": "vim::Left",
            "k": "vim::Right"
        }
    },
    {
        "context": "(VimControl && !menu)",
        "bindings": {
            "g b": "editor::GoToPreviousDiagnostic"
        }
    },
    {
        "context": "(VimControl && !menu)",
        "bindings": {
            "g n": "editor::GoToDiagnostic"
        }
    },
    {
        "context": "(ProjectPanel && not_editing)",
        "bindings": {
            "o": "project_panel::OpenPermanent"
        }
    },
    {
      "context": "(Editor && edit_prediction)",
      "bindings": {
        "shift-enter": "editor::AcceptEditPrediction"
      }
    },
    {
      "context": "(Editor && edit_prediction_conflict)",
      "bindings": {
        "shift-enter": "editor::AcceptEditPrediction"
      }
    }
]
